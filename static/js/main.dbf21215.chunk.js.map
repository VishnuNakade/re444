{"version":3,"sources":["loginSound.mp3","Login.js","firebase.js","components/Alart.js","Hero.js","components/Loading.js","Alldevices.js","Location.js","App.js","index.js","re4billion.png"],"names":["module","exports","__webpack_require__","p","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","React","createElement","className","style","alignItems","width","height","marginBottom","src","reImg","alt","type","autoFocus","required","placeholder","value","onChange","e","target","Fragment","onClick","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","Alart","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClose","padding","alart","concat","role","color","fontSize","cursor","paddingTop","msg","Modal","onHide","border","Header","Title","class","Body","InverterCheck","BatteryCheck","SolarCheck","Footer","Button","variant","backgroundColor","prevTime","timeCount","p1Value","p2Value","p3Value","p1ValueTot","p2ValueTot","p3ValueTot","flag","axisValueCount","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","myArray1","myArray2","myArray3","myArray4","myArray5","myArray6","myArray7","myArray8","myArray9","myArray10","myArray11","myArray12","iterVal","Hero","_ref","handleLogout","data","setdata","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","solarVoltage","setSolarVoltage","_useState9","_useState10","solarCurrent","setSolarCurrent","_useState11","_useState12","inverterVoltage","setInverterVoltage","_useState13","_useState14","inverterCurrent","setInverterCurrent","_useState15","_useState16","gridVoltage","setGridVoltage","_useState17","_useState18","gridCurrent","setGridCurrent","_useState19","_useState20","batteryVoltage","setBatteryVoltage","_useState21","_useState22","batteryCurrent","setBatteryCurrent","_useState23","_useState24","tValue","settValue","curr","Date","setDate","getDate","dateOrg","toISOString","substring","_useState25","split","_useState26","caldate","setCalDate","_useState27","_useState28","dateColor","setDateColor","_useState29","_useState30","sidebarOpen","setSidebarOpen","_useState31","_useState32","selectedItem","setSelectedItem","handleMenuItemClick","itemName","localStorage","setItem","useEffect","storedItem","getItem","_useState33","_useState34","setAlart","showAlart","message","_useState35","_useState36","setInverterCheck","_useState37","_useState38","setBatteryCheck","_useState39","_useState40","setSolarCheck","InverterAlart","SolarAlart","solarValue","currentTime","getTime","startTime","setHours","setMinutes","setSeconds","endTime","isSolarFailure","toFixed","batteryCharge","loadStatus","gridAvailability","inverterOutput","currentHour","getHours","isPeakTime","checkInverterStatus","fetchdata","fetchdatafull","mail","databaseRef","ref","get","then","snapshot","record","push","val","undefined","catch","error","console","formattedDate","toLocaleString","currentTimestamp","Math","floor","now","queryRef","timestamp24HoursAgo","uniValue","parseInt","query","orderByKey","startAt","k","forEach","childSnapshot","key","length","finally","dataCharts","Object","entries","map","_ref2","dateForGraph","dateForCalculation","_ref3","t","Number","Intl","DateTimeFormat","hour","minute","hour12","format","isNaN","abs","sum1","sum2","sum3","sum4","sum5","sum6","sum7","sum8","sum9","sum10","sum11","sum12","i","ccAxisXValue","SolarVoltage","SolarCurrent","SolarPower","InverterVoltage","InverterCurrent","InverterPower","GridVoltage","GridCurrent","GridPower","BatteryVoltage","BatteryCurrent","BatteryPower","SolarVoltageSmooth","SolarCurrentSmooth","SolarPowerSmooth","InverterVoltageSmooth","InverterCurrentSmooth","InverterPowerSmooth","GridVoltageSmooth","GridCurrentSmooth","GridPowerSmooth","BatteryVoltageSmooth","BatteryCurrentSmooth","BatteryPowerSmooth","_useState41","getCurrentTime","_useState42","setTime","today","h","m","getMinutes","s","getSeconds","checkTime","interval","setInterval","clearInterval","_useState43","_useState44","cardSolarVoltage","setcardSolarVoltage","_useState45","_useState46","cardSolarCurrent","setcardSolarCurrent","_useState47","_useState48","cardInverterVoltage","setcardInverterVoltage","_useState49","_useState50","cardInverterCurrent","setcardInverterCurrent","_useState51","_useState52","cardGridVoltage","setcardGridVoltage","_useState53","_useState54","cardGridCurrent","setcardGridCurrent","_useState55","_useState56","cardBatteryVoltage","setcardBatteryVoltage","_useState57","_useState58","cardBatteryCurrent","setcardBatteryCurrent","ClassSolarCurrent","ClassInverterVoltage","ClassInverterCurrent","ClassGridVoltage","ClassGridCurrent","ClassBatteryVoltage","ClassBatteryCurrent","_useState59","_useState60","showModal1","setShowModal1","_useState61","_useState62","showModal2","setShowModal2","_useState63","_useState64","showModal3","setShowModal3","_useState65","_useState66","showModal4","setShowModal4","_useState67","_useState68","showModal5","setShowModal5","_useState69","_useState70","showModal6","setShowModal6","_useState71","_useState72","showModal7","setShowModal7","_useState73","_useState74","showModal8","setShowModal8","_useState75","_useState76","showModal9","setShowModal9","_useState77","_useState78","showModal10","setShowModal10","_useState79","_useState80","showModal11","setShowModal11","_useState81","_useState82","showModal12","setShowModal12","handleCloseModal1","handleCloseModal2","handleCloseModal3","handleCloseModal4","handleCloseModal5","handleCloseModal6","handleCloseModal7","handleCloseModal8","handleCloseModal9","handleCloseModal10","handleCloseModal11","handleCloseModal12","justifyContent","position","top","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","paddingRight","margin","borderTop","paddingLeft","background","defaultValue","float","marginTop","LineChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","textAnchor","YAxis","label","dx","Tooltip","Legend","layout","verticalAlign","align","Line","stroke","dot","centered","dialogClassName","Loading","_regeneratorRuntime","r","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","Alldevices","datafull","_asyncToGenerator","_callee","_context","t0","index","emailPrefix","trim","databaseRefFull","queryRefFull","recordFull","divFull","document","classList","add","header","innerHTML","solarGenerationSpan","p1ValueTotArray","display","borderRadius","appendChild","marginRight","addEventListener","toggleAdditionalData","additionalDataDiv","additionalDataHTML","getElementById","apply","arguments","currentOpenEmail","element","querySelector","hasRecords","_callee3","promises","results","flattenedArray","_context3","_ref4","_callee2","mailItem","mailSplit","_context2","_x","all","flat","log","_ref5","date","_ref6","Location","title","App","user","setUser","setEmailError","setPasswordError","loading","setLoading","auth","getAuth","clearErrors","signOut","authListener","onAuthStateChanged","setTimeout","Router","Routes","Route","exact","path","History","Data","signInWithEmailAndPassword","Audio","loginSound","play","err","code","createUserWithEmailAndPassword","ReactDOM","render"],"mappings":"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","file":"static/js/main.dbf21215.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginSound.42a00ce5.mp3\";","import React from \"react\";\nimport reImg from './re4billion.png'\n\nconst Login = (props) => {\n\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError\n    } = props;\n\n    return (\n        <section className=\"login\">\n            \n            <div className=\"loginContainer\" style={{alignItems:\"center\"}}>\n            <img style={{ width: 200, height: 60,marginBottom:\"8px\"}} src={reImg} alt=\"re4billion\" />\n                <h3>Log In</h3>\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\n                    <input\n                        type=\"text\"\n                        autoFocus\n                        required\n                        placeholder=\"username\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <p className=\"errorMsg\">{emailError}</p>\n\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\n                    <input\n                        type=\"password\"\n                        required\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n\n                <p className=\"errorMsg\">{passwordError}</p>\n                <div className=\"btnContainer\">\n                    {hasAccount ? (\n\n                        <>\n                            <button onClick={handleSignup} className=\"btn float-right\">Sign up</button>\n                            <p className=\"position-absolute\">\n                                Have an account ?\n                                <span onClick={() => setHasAccount(!hasAccount)}> Login</span>\n                            </p>\n                        </>\n\n                    ) : (\n                        <>\n                            <button onClick={handleLogin} className=\"btn float-right\">Login</button>\n                            <p className=\"position-absolute\">\n                                Don't have an account ?\n                                <span onClick={() => setHasAccount(!hasAccount)}> Sign up</span>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default Login;","import { initializeApp } from \"firebase/app\";\nimport {getDatabase} from \"firebase/database\";\n\n\n\n\n\nconst config = {\n  apiKey: \"AIzaSyCwZn_G2BIVZuY_hWjKGKddjRRp6On5tE4\",\n  authDomain: \"rmstesting-d5aa6.firebaseapp.com\",\n  databaseURL: \"https://rmstesting-d5aa6-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"rmstesting-d5aa6\",\n  storageBucket: \"rmstesting-d5aa6.appspot.com\",\n  messagingSenderId: \"413006652770\",\n  appId: \"1:413006652770:web:d25937a42992df3817f83b\"\n  };\n  \n  const app=initializeApp(config);\n\n\n  export default app\n  \n  \n  export const db=getDatabase(app);","import React, { useState }  from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\r\nimport { Button, Modal } from 'react-bootstrap'; // Import Bootstrap components\r\n\r\n\r\nexport default function Alart(props) {\r\n\r\n    // const capitalize =(word)=>{\r\n    //     const lower=word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    // }\r\n    const [show, setShow] = useState(false); // State to manage modal visibility\r\n    const handleClose = () => setShow(false); // Function to close modal\r\n    const handleShow = () => setShow(true); // Function to show modal\r\n  \r\n\r\n  return (\r\n  <div style={{ height: '50px',padding:'3px'}}>\r\n    {props.alart && (\r\n      <div className={`alert alert-${props.alart.type} alert-dismissible fade show`} role=\"alert\">\r\n        {props.alart.type === 'success' ? (\r\n         <>\r\n          <i className=\"fa-solid fa-circle-check\" style={{ color: '#217a00',padding:'5px' }}></i>\r\n\r\n          <i className=\"fa-solid fa-circle-info float-right\" style={{ fontSize: '20px', cursor: 'pointer',color:'DodgerBlue',paddingTop:'4px' }} onClick={handleShow}></i>\r\n         </>\r\n        ) : (\r\n          <i className=\"fa-solid fa-triangle-exclamation\" style={{ color: '#f31616',padding:'5px' }}></i>\r\n        )}\r\n        {props.alart.msg}\r\n\r\n        \r\n    \r\n      </div>\r\n      \r\n    )}\r\n\r\n      {/* Modal Start */}\r\n      <Modal show={show} onHide={handleClose} style={{border:'3px solid #17a2b8'}}>\r\n        <Modal.Header >\r\n          <Modal.Title>Device Checkup<i class=\"fa-solid fa-satellite-dish\" style={{padding:'5px',fontSize:'35px'}}></i></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><i class=\"fa-solid fa-box\" style={{padding:'7px'}}></i>{props.InverterCheck && props.InverterCheck.msg}</Modal.Body>\r\n        <Modal.Body><i class=\"fa-solid fa-battery-full\" style={{padding:'7px'}}></i>{props.BatteryCheck && props.BatteryCheck.msg}</Modal.Body>\r\n        <Modal.Body><i class=\"fa-solid fa-solar-panel\" style={{padding:'7px'}}></i>{props.SolarCheck && props.SolarCheck.msg}</Modal.Body>\r\n       \r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose} style={{backgroundColor:'DodgerBlue'}}>\r\n            Close\r\n          </Button>\r\n  \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n  </div>\r\n);\r\n\r\n\r\n}\r\n\r\n{/* <strong>{capitalize(props.alart.type)}</strong> */}","import app from \"./firebase\"\nimport { db } from './firebase';\nimport { ref, onValue, get, query, orderByKey, startAt, endAt } from 'firebase/database';\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\nimport moment from \"moment\";\nimport { isNaN } from \"lodash\";\nimport './Sidebar.css';\nimport reImg from './re4billion.png'\nimport Alart from './components/Alart';\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal } from 'react-bootstrap';\n\n\n\nlet prevTime = 24;\nlet prevTimeOld = 24;\nlet timeCount = 0;\nlet p1Value = 0;\nlet p2Value = 0;\nlet p3Value = 0;\nlet p1ValueTot = 0;\nlet p2ValueTot = 0;\nlet p3ValueTot = 0;\nlet flag = 0;\nlet p1ValueTotFinal = 0;\nlet p2ValueTotFinal = 0;\nlet p3ValueTotFinal = 0;\nlet axisValueCount = 0;\nlet v1 = 0;\nlet v2 = 0;\nlet v3 = 0;\nlet v4 = 0;\nlet v5 = 0;\nlet v6 = 0;\nlet v7 = 0;\nlet v8 = 0;\nlet v9 = 0;\nlet v10 = 0;\nlet v11 = 0;\nlet v12 = 0;\nconst myArray1 = []\nconst myArray2 = []\nconst myArray3 = []\nconst myArray4 = []\nconst myArray5 = []\nconst myArray6 = []\nconst myArray7 = []\nconst myArray8 = []\nconst myArray9 = []\nconst myArray10 = []\nconst myArray11 = []\nconst myArray12 = []\nlet iterVal = 0;\n\n\n\n\nconst Hero = ({ handleLogout }) => {\n    const [data, setdata] = useState([])\n    const [timeValueArray, setTimeValueArray] = useState([])\n    const [solarVoltageArray, setSolarVoltageArray] = useState([])\n    const [solarVoltage, setSolarVoltage] = useState('')\n    const [solarCurrent, setSolarCurrent] = useState('')\n    const [inverterVoltage, setInverterVoltage] = useState('')\n    const [inverterCurrent, setInverterCurrent] = useState('')\n    const [gridVoltage, setGridVoltage] = useState('')\n    const [gridCurrent, setGridCurrent] = useState('')\n    const [batteryVoltage, setBatteryVoltage] = useState('')\n    const [batteryCurrent, setBatteryCurrent] = useState('')\n    const [tValue, settValue] = useState('')\n\n\n\n\n    var curr = new Date(new Date());\n    curr.setDate(curr.getDate());\n    var dateOrg = curr.toISOString().substring(0, 10);\n    var dd1 = dateOrg.split('-');\n\n    const [caldate, setCalDate] = useState(dateOrg);\n    const [dateColor, setDateColor] = useState('#8cf35d');\n\n    // console.log(caldate)\n\n\n    // Sidebar\n    const [sidebarOpen, setSidebarOpen] = useState(true);\n    const [selectedItem, setSelectedItem] = useState('ftb001');\n\n    const toggleSidebar = () => {\n        setSidebarOpen(!sidebarOpen);\n    };\n\nconst handleMenuItemClick = (itemName) => {\n    setSelectedItem(itemName);\n    // Save the selected item to localStorage\n    localStorage.setItem('selectedItem', itemName);\n    // You can perform any other actions here based on the selected item\n};\n\n// Add this code to your component to retrieve the selected item from localStorage\nuseEffect(() => {\n    const storedItem = localStorage.getItem('selectedItem');\n    if (storedItem) {\n        setSelectedItem(storedItem);\n    }\n}, []); // This effect runs only once when the component mounts\n\n    //Sidebar end\n\n\n    //Alarts\n    const [alart, setAlart] = useState(null)\n    const showAlart = (message, type) => {\n        setAlart({\n            msg: message,\n            type: type\n        })\n        // setTimeout(() => {\n        //   setAlart(null);\n        // },3000);\n    }\n\n    const [InverterCheck, setInverterCheck] = useState(null);\n    const [BatteryCheck, setBatteryCheck] = useState(null);\n    const [SolarCheck, setSolarCheck] = useState(null);\n\n    const InverterAlart = (message) => {\n        setInverterCheck({\n            msg: message\n        })\n    }\n\n    const BatteryAlart = (message) => {\n        setBatteryCheck({\n            msg: message\n        })\n    }\n\n    const SolarAlart = (message) => {\n        setSolarCheck({\n            msg: message\n        })\n    }\n\n\n\n    useEffect(() => {\n        //.................................Solar check Start...................................\n        function isSolarFailure(solarValue) {\n            // Get the current time\n            var currentTime = new Date().getTime();\n    \n            // Define the time range for solar failure (6:00 AM to 5:30 PM)\n            var startTime = new Date();\n            startTime.setHours(6);\n            startTime.setMinutes(0);\n            startTime.setSeconds(0);\n    \n            var endTime = new Date();\n            endTime.setHours(17);\n            endTime.setMinutes(30);\n            endTime.setSeconds(0);\n    \n            // Check if the current time is within the specified time range and if the solar value is below a certain threshold\n            if (currentTime >= startTime.getTime() && currentTime <= endTime.getTime() && solarValue < 0.5) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    \n        // Example solar value\n        var solarValue = solarVoltage * solarCurrent;\n    \n        // Check if there is a solar failure\n        if (isSolarFailure(solarValue)) {\n            SolarAlart(`Solar failure detected between 6:00 AM and 5:30 PM. ${(solarCurrent * solarVoltage).toFixed(2)} W`);\n        } else {\n            SolarAlart(`Solar system is operational. ${(solarCurrent * solarVoltage).toFixed(2)} W`);\n        }\n        //..........................................Solar check end.............................................\n    \n        //..........................................Inverter check  Start........................................\n    \n        function checkInverterStatus(solarVoltage, solarCurrent, batteryCharge, loadStatus, gridAvailability, inverterOutput) {\n            // Condition 1: Solar voltage present but zero current during peak time\n            if (solarVoltage > 0 && solarCurrent === 0 && isPeakTime()) {\n                InverterAlart(\"Inverter failure: Solar power is not charging.\");\n            }\n    \n            // Condition 2: Solar power charged, but load running on Grid\n            if (solarVoltage > 0 && batteryCharge === 100 && loadStatus === \"Grid\") {\n                InverterAlart(\"Inverter failure: Load is running on Grid instead of inverter.\");\n            }\n    \n            // Condition 3: Inverter loading only when Grid is available\n            if (inverterOutput > 0 && !gridAvailability) {\n                InverterAlart(\"Inverter failure: Inverter only works when Grid is available.\");\n            }\n    \n            // Condition 4: Inverter output is zero despite availability of solar, grid, and battery\n            if (solarVoltage > 0 && gridAvailability && batteryCharge > 0 && inverterOutput === 0) {\n                InverterAlart(\"Inverter failure: Inverter output is zero.\");\n            }\n    \n            // If none of the conditions match, return success\n            InverterAlart(`Inverter is functioning properly.  ${(inverterVoltage * inverterCurrent).toFixed(2)} W`);\n        }\n    \n        // Function to check if it's peak time (10am to 2pm)\n        function isPeakTime() {\n            const currentTime = new Date();\n            const currentHour = currentTime.getHours();\n            return currentHour >= 10 && currentHour <= 14;\n        }\n    \n        // Example usage:\n        const loadStatus = inverterVoltage < gridVoltage ? \"Grid\" : \"Inverter\"; // Example load status (can be \"Grid\" or \"Inverter\")\n        const gridAvailability = gridVoltage > 0; // Example grid availability (true/false)\n        const inverterOutput = inverterVoltage * inverterCurrent; // Example inverter output power in watts\n        const batteryCharge = 100; \n        checkInverterStatus(solarVoltage, solarCurrent, batteryCharge, loadStatus, gridAvailability, inverterOutput);\n    \n        //..........................................Inverter check  End..........................................\n    \n        //..........................................Battery check Start..........................................\n        // No battery check code provided\n        //..........................................Battery check End............................................\n    \n        // InverterAlart(\"hello i am inverter\");\n        BatteryAlart(\"Hello i am battery\");\n        //   SolarAlart(\"hello i am solar\");\n    }, [solarVoltage, solarCurrent, inverterVoltage, inverterCurrent, gridVoltage]);\n\n    \n\n\n\n\n\n\n\n    useEffect(() => {\n        // handleMenuItemClick();\n        fetchdata();\n        fetchdatafull();\n    }, [caldate, selectedItem] || [])\n\n\n    const fetchdata = () => {\n        var mail = `${selectedItem}`\n\n        const databaseRef = ref(db, `data/${mail}/latestValues`);\n        get(databaseRef)\n            .then((snapshot) => {\n                const record = [];\n                // console.log(snapshot.key); \n\n                record.push(snapshot.val());\n\n                setSolarVoltage((record[0].solarVoltage).toFixed(2));\n                setSolarCurrent((record[0].solarCurrent).toFixed(2));\n                setInverterVoltage((record[0].inverterVoltage).toFixed(2));\n                setInverterCurrent((record[0].inverterCurrent).toFixed(2));\n                setGridVoltage((record[0].gridVoltage).toFixed(2));\n                setGridCurrent((record[0].gridCurrent).toFixed(2));\n                setBatteryVoltage((record[0].batteryVoltage).toFixed(2));\n                settValue((record[0].tValue));\n                setBatteryCurrent((record[0].batteryCurrent !== undefined ? (record[0].batteryCurrent).toFixed(2) : 0));\n\n\n\n\n                p1ValueTot = 0;\n                p2ValueTot = 0;\n                p3ValueTot = 0;\n                axisValueCount = 0;\n                v1 = 0;\n                v2 = 0;\n                v3 = 0;\n                v4 = 0;\n                v5 = 0;\n                v6 = 0;\n                v7 = 0;\n                v8 = 0;\n                v9 = 0;\n                v10 = 0;\n                v11 = 0;\n                v12 = 0;\n                iterVal = 0;\n            })\n            .catch((error) => {\n                console.error('Error fetching data:', error);\n            });\n\n\n\n    }\n    const LastUpdate = new Date(tValue * 1000);\n    const formattedDate = LastUpdate.toLocaleString();\n\n\n\n\n\n    const fetchdatafull = () => {\n        let currentTimestamp = Math.floor(Date.now() / 1000);\n    \n        if (caldate) {\n            currentTimestamp = Math.floor(new Date(caldate).getTime() / 1000);\n        }\n    \n        const timestamp24HoursAgo = currentTimestamp - (24 * 60 * 60);\n        var mail = `${selectedItem}`\n    \n        var uniValue = parseInt((new Date(caldate).getTime() / 1000).toFixed(0)) - 19800\n        const databaseRef = ref(db, `data/${mail}/timestamp`);\n        var queryRef;\n        queryRef = query(databaseRef, orderByKey(), startAt(\"\" + timestamp24HoursAgo));\n    \n        get(queryRef)\n            .then((snapshot) => {\n                const record = [];\n                let k = 0;\n                snapshot.forEach((childSnapshot) => {\n                    if (mail == \"ftb001\" && childSnapshot.key > 1663660000) {\n                        k = 5400;\n                    }\n                    if (childSnapshot.key > uniValue - k && childSnapshot.key < uniValue + 86400 - k) {\n                        record.push(childSnapshot)\n                    }\n                })\n                setdata(record);\n    \n                // Check conditions and update color after data fetching\n                if (record.length) {\n                    setDateColor('#8cf35d');\n                } else {\n                    setDateColor('#fc7266');\n                }\n    \n                if (record.length > 0) {\n                    showAlart(\"This device is working\", \"success\");\n                } else {\n                    showAlart(\"This device is not working\", \"danger\");\n                }\n            })\n            .finally(() => {\n                // Resetting variables\n                prevTime = 24;\n                prevTimeOld = 24;\n                timeCount = 0;\n                p1Value = 0;\n                p2Value = 0;\n                p3Value = 0;\n                p1ValueTot = 0;\n                p2ValueTot = 0;\n                p3ValueTot = 0;\n                flag = 0;\n                axisValueCount = 0;\n                v1 = 0;\n                v2 = 0;\n                v3 = 0;\n                v4 = 0;\n                v5 = 0;\n                v6 = 0;\n                v7 = 0;\n                v8 = 0;\n                v9 = 0;\n                v10 = 0;\n                v11 = 0;\n                v12 = 0;\n                iterVal = 0;\n            });\n    }\n\n\n\n\n\n    p1ValueTot = 0;\n    p2ValueTot = 0;\n    p3ValueTot = 0;\n\n\n\n\n    const dataCharts = Object.entries(data)\n        .map(([key, value]) => {\n            let dateForGraph, dateForCalculation;\n            var mail = `${selectedItem}`\n\n            if (value.key > 1663660000 && mail == \"ftb001\") {\n\n                const t = new Date((Number(value.key) + (5400 - 230)) * 1000);\n                dateForGraph = new Intl.DateTimeFormat('en-US', { hour: '2-digit', minute: '2-digit', hour12: false }).format(t);\n\n                dateForCalculation = new Intl.DateTimeFormat('en-US', { hour: '2-digit', hour12: false }).format(t);\n\n                if (prevTime == Number(dateForCalculation)) {\n                    flag = 1;\n                    if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                        timeCount = timeCount + 1;\n\n                        p1Value = p1Value + (value.val().solarVoltage) * (value.val().solarCurrent)\n                        p2Value = p2Value + (value.val().gridVoltage) * (value.val().gridCurrent)\n                        p3Value = p3Value + (value.val().inverterVoltage) * (value.val().inverterCurrent)\n                    }\n                    // console.log(\"prevTime\")\n                    // console.log(prevTime)            \n\n                } else {\n\n                    if (flag == 1) {\n\n                        p1ValueTot = p1ValueTot + p1Value / timeCount;\n                        p2ValueTot = p2ValueTot + p2Value / timeCount;\n                        p3ValueTot = p3ValueTot + p3Value / timeCount;\n\n                        if (isNaN(p1ValueTot)) {\n                            p1ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p2ValueTot)) {\n                            p2ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p3ValueTot)) {\n                            p3ValueTot = 0;\n\n                        }\n\n                        // console.log(\"p3ValueTot\")\n                        // console.log(p3ValueTot)\n\n                        if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                            timeCount = 1;\n                            p1Value = (value.val().solarVoltage) * (value.val().solarCurrent);\n                            p2Value = (value.val().gridVoltage) * (value.val().gridCurrent);\n                            p3Value = (value.val().inverterVoltage) * (value.val().inverterCurrent);\n                        }\n                        if (prevTime == 24) {\n                            prevTime = 1;\n                        } else {\n                            prevTime = prevTime + 1;\n                        }\n                    }\n                }\n\n            } else {\n                const t = new Date(value.key * 1000);\n                dateForGraph = new Intl.DateTimeFormat('en-US', { hour: '2-digit', minute: '2-digit', hour12: false }).format(t);\n\n                dateForCalculation = new Intl.DateTimeFormat('en-US', { hour: '2-digit', hour12: false }).format(t);\n\n\n                if (prevTime == Number(dateForCalculation)) {\n                    flag = 1;\n                    if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                        timeCount = timeCount + 1;\n\n                        p1Value = p1Value + (value.val().solarVoltage) * (value.val().solarCurrent)\n                        p2Value = p2Value + (value.val().gridVoltage) * (value.val().gridCurrent)\n                        p3Value = p3Value + (value.val().inverterVoltage) * (value.val().inverterCurrent)\n                    }\n                    // console.log(\"prevTime\")\n                    // console.log(prevTime)            \n\n                } else {\n\n                    if (flag == 1) {\n\n                        p1ValueTot = p1ValueTot + p1Value / timeCount;\n                        p2ValueTot = p2ValueTot + p2Value / timeCount;\n                        p3ValueTot = p3ValueTot + p3Value / timeCount;\n\n                        if (isNaN(p1ValueTot)) {\n                            p1ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p2ValueTot)) {\n                            p2ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p3ValueTot)) {\n                            p3ValueTot = 0;\n\n                        }\n\n                        // console.log(\"p3ValueTot\")\n                        // console.log(p3ValueTot)\n\n                        if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                            timeCount = 1;\n                            p1Value = (value.val().solarVoltage) * (value.val().solarCurrent);\n                            p2Value = (value.val().gridVoltage) * (value.val().gridCurrent);\n                            p3Value = (value.val().inverterVoltage) * (value.val().inverterCurrent);\n                        }\n                        if (prevTime == 24) {\n                            prevTime = 1;\n                        } else {\n                            prevTime = prevTime + 1;\n                        }\n                    }\n                }\n            }\n\n\n            axisValueCount = axisValueCount + 1;\n\n            if (axisValueCount < 10) {\n                v1 = Math.abs(value.val().solarVoltage)\n                myArray1.push(v1)\n\n                v2 = Math.abs(value.val().solarCurrent)\n                myArray2.push(v2)\n\n                v3 = Math.abs((value.val().solarVoltage) * (value.val().solarCurrent))\n                myArray3.push(v3)\n\n                v4 = Math.abs(value.val().inverterVoltage)\n                myArray4.push(v4)\n\n                v5 = Math.abs(value.val().inverterCurrent)\n                myArray5.push(v5)\n\n                v6 = Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent))\n                myArray6.push(v6)\n\n                v7 = Math.abs(value.val().gridVoltage)\n                myArray7.push(v7)\n\n                v8 = Math.abs(value.val().gridCurrent)\n                myArray8.push(v8)\n\n                v9 = Math.abs((value.val().gridVoltage) * (value.val().gridCurrent))\n                myArray9.push(v9)\n\n                v10 = Math.abs(value.val().batteryVoltage)\n                myArray10.push(v10)\n\n                v11 = Math.abs(value.val().batteryCurrent)\n                myArray11.push(v11)\n\n                v12 = Math.abs((value.val().batteryVoltage) * (value.val().batteryCurrent))\n                myArray12.push(v12)\n\n            } else {\n                myArray1.push(Math.abs(value.val().solarVoltage))\n                myArray2.push(Math.abs(value.val().solarCurrent))\n                myArray3.push(Math.abs((value.val().solarVoltage) * (value.val().solarCurrent)))\n\n                myArray4.push(Math.abs(value.val().inverterVoltage))\n                myArray5.push(Math.abs(value.val().inverterCurrent))\n                myArray6.push(Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent)))\n\n                myArray7.push(Math.abs(value.val().gridVoltage))\n                myArray8.push(Math.abs(value.val().gridCurrent))\n                myArray9.push(Math.abs((value.val().gridVoltage) * (value.val().gridCurrent)))\n\n                myArray10.push(Math.abs(value.val().batteryVoltage))\n                myArray11.push(Math.abs(value.val().batteryCurrent))\n                myArray12.push(Math.abs((value.val().batteryVoltage) * (value.val().batteryCurrent)))\n\n                let sum1 = 0;\n                let sum2 = 0;\n                let sum3 = 0;\n                let sum4 = 0;\n                let sum5 = 0;\n                let sum6 = 0;\n                let sum7 = 0;\n                let sum8 = 0;\n                let sum9 = 0;\n                let sum10 = 0;\n                let sum11 = 0;\n                let sum12 = 0;\n\n                for (var i = iterVal; i < iterVal + 10; i++) {\n                    sum1 = sum1 + myArray1[i]\n                    sum2 = sum2 + myArray2[i]\n                    sum3 = sum3 + myArray3[i]\n                    sum4 = sum4 + myArray4[i]\n                    sum5 = sum5 + myArray5[i]\n                    sum6 = sum6 + myArray6[i]\n                    sum7 = sum7 + myArray7[i]\n                    sum8 = sum8 + myArray8[i]\n                    sum9 = sum9 + myArray9[i]\n                    sum10 = sum10 + myArray10[i]\n                    sum11 = sum11 + myArray11[i]\n                    sum12 = sum12 + myArray12[i]\n                }\n                // console.log(\"sum2\")\n                // console.log(sum2)\n                iterVal = iterVal + 1;\n                v1 = sum1 / 10\n                v2 = sum2 / 10\n                v3 = sum3 / 10\n                v4 = sum4 / 10\n                v5 = sum5 / 10\n                v6 = sum6 / 10\n                v7 = sum7 / 10\n                v8 = sum8 / 10\n                v9 = sum9 / 10\n                v10 = sum10 / 10\n                v11 = sum11 / 10\n                v12 = sum12 / 10\n            }\n            return {\n                ccAxisXValue: dateForGraph,\n                SolarVoltage: Math.floor(Math.abs(value.val().solarVoltage)),\n                SolarCurrent: Math.abs(value.val().solarCurrent).toFixed(2),\n                SolarPower: Math.floor( Math.abs((value.val().solarVoltage) * (value.val().solarCurrent))),\n\n                InverterVoltage: Math.floor( Math.abs(value.val().inverterVoltage)),\n                InverterCurrent:  Math.abs(value.val().inverterCurrent).toFixed(2),\n                InverterPower: Math.floor( Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent))),\n\n                GridVoltage: Math.floor( Math.abs(value.val().gridVoltage)),\n                GridCurrent:Math.abs(value.val().gridCurrent).toFixed(2),\n                GridPower:Math.floor( Math.abs((value.val().gridVoltage) * (value.val().gridCurrent))),\n\n                BatteryVoltage: Math.floor( Math.abs(value.val().batteryVoltage)),\n                BatteryCurrent: Math.abs(value.val().batteryCurrent).toFixed(2),\n                BatteryPower: Math.floor( Math.abs((value.val().batteryVoltage) * (value.val().batteryCurrent))),\n\n                SolarVoltageSmooth: v1,\n                SolarCurrentSmooth: v2,\n                SolarPowerSmooth: v3,\n\n                InverterVoltageSmooth: v4,\n                InverterCurrentSmooth: v5,\n                InverterPowerSmooth: v6,\n\n                GridVoltageSmooth: v7,\n                GridCurrentSmooth: v8,\n                GridPowerSmooth: v9,\n\n                BatteryVoltageSmooth: v10,\n                BatteryCurrentSmooth: v11,\n                BatteryPowerSmooth: v12,\n\n            }\n\n        })\n\n\n\n    //clock\n    const [time, setTime] = useState(getCurrentTime());\n\n    function getCurrentTime() {\n        const today = new Date();\n        let h = today.getHours();\n        let m = today.getMinutes();\n        let s = today.getSeconds();\n        m = checkTime(m);\n        s = checkTime(s);\n        return `${h}:${m}:${s}`;\n    }\n\n    function checkTime(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTime(getCurrentTime());\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n\n\n    //Alerts\n\n    // useEffect(() => {\n    //     // Define a function to check conditions and show alerts\n    //     const checkAndShowAlerts = () => {\n    //       // Check conditions after data is fetched\n    //       if ((p1ValueTot / 1000) > 0 && (p3ValueTot / 1000) > 0) {\n    //         showAlart(\"This device is working\", \"success\");\n    //       } else {\n    //         showAlart(\"This device is not working\", \"danger\");\n    //       }\n    //     };\n\n    //     // Delay execution after 3000 milliseconds (3 seconds)\n    //     const delay = 320; // time in milliseconds\n    //     const timerId = setTimeout(checkAndShowAlerts, delay);\n\n    //     // Clean up the timer to avoid memory leaks\n    //     return () => clearTimeout(timerId);\n\n    //   }, [p1ValueTot, p2ValueTot, p3ValueTot,showAlart]);\n\n\n    //-------------------card color-------------------------------------\n\n    // Effect to update the color when solarVoltage changes\n    const [cardSolarVoltage, setcardSolarVoltage] = useState('card');\n    const [cardSolarCurrent, setcardSolarCurrent] = useState('card');\n    const [cardInverterVoltage, setcardInverterVoltage] = useState('card');\n    const [cardInverterCurrent, setcardInverterCurrent] = useState('card');\n    const [cardGridVoltage, setcardGridVoltage] = useState('card');\n    const [cardGridCurrent, setcardGridCurrent] = useState('card');\n    const [cardBatteryVoltage, setcardBatteryVoltage] = useState('card');\n    const [cardBatteryCurrent, setcardBatteryCurrent] = useState('card');\n\n\n    useEffect(() => {\n        // Update the class name based on solarVoltage\n        const ClassSolarVoltage = solarVoltage > 2 ? 'card Highl' : 'card Lowl';\n        const ClassSolarCurrent = solarCurrent > 0 ? 'card Highl' : 'card Lowl';\n        const ClassInverterVoltage = inverterVoltage > 180 ? 'card Highl' : 'card Lowl';\n        const ClassInverterCurrent = inverterCurrent > 0 ? 'card Highl' : 'card Lowl';\n        const ClassGridVoltage = gridVoltage > 160 ? 'card Highl' : 'card Lowl';\n        const ClassGridCurrent = gridCurrent > 0 ? 'card Highl' : 'card Lowl';\n        const ClassBatteryVoltage = batteryVoltage > 22 ? 'card Highl' : 'card Lowl';\n        const ClassBatteryCurrent = batteryCurrent > 0 ? 'card Highl' : 'card Lowl';\n\n\n        setcardSolarVoltage(ClassSolarVoltage);\n        setcardSolarCurrent(ClassSolarCurrent);\n        setcardInverterVoltage(ClassInverterVoltage);\n        setcardInverterCurrent(ClassInverterCurrent);\n        setcardGridVoltage(ClassGridVoltage);\n        setcardGridCurrent(ClassGridCurrent);\n        setcardBatteryVoltage(ClassBatteryVoltage);\n        setcardBatteryCurrent(ClassBatteryCurrent);\n\n    }, [solarVoltage, solarCurrent, inverterVoltage, inverterCurrent, gridVoltage, gridCurrent, batteryVoltage, batteryCurrent]);\n\n    // console.log(tValue);\n\n    //LineChart Modal\n\n    const [showModal1, setShowModal1] = useState(false);\n    const [showModal2, setShowModal2] = useState(false);\n    const [showModal3, setShowModal3] = useState(false);\n    const [showModal4, setShowModal4] = useState(false);\n    const [showModal5, setShowModal5] = useState(false);\n    const [showModal6, setShowModal6] = useState(false);\n    const [showModal7, setShowModal7] = useState(false);\n    const [showModal8, setShowModal8] = useState(false);\n    const [showModal9, setShowModal9] = useState(false);\n    const [showModal10, setShowModal10] = useState(false);\n    const [showModal11, setShowModal11] = useState(false);\n    const [showModal12, setShowModal12] = useState(false);\n\n    const handleCloseModal1 = () => setShowModal1(false);\n    const handleCloseModal2 = () => setShowModal2(false);\n    const handleCloseModal3 = () => setShowModal3(false);\n    const handleCloseModal4 = () => setShowModal4(false);\n    const handleCloseModal5 = () => setShowModal5(false);\n    const handleCloseModal6 = () => setShowModal6(false);\n    const handleCloseModal7 = () => setShowModal7(false);\n    const handleCloseModal8 = () => setShowModal8(false);\n    const handleCloseModal9 = () => setShowModal9(false);\n    const handleCloseModal10 = () => setShowModal10(false);\n    const handleCloseModal11 = () => setShowModal11(false);\n    const handleCloseModal12 = () => setShowModal12(false);\n\n    const handleShowModal1 = () => setShowModal1(true);\n    const handleShowModal2 = () => setShowModal2(true);\n    const handleShowModal3 = () => setShowModal3(true);\n    const handleShowModal4 = () => setShowModal4(true);\n    const handleShowModal5 = () => setShowModal5(true);\n    const handleShowModal6 = () => setShowModal6(true);\n    const handleShowModal7 = () => setShowModal7(true);\n    const handleShowModal8 = () => setShowModal8(true);\n    const handleShowModal9 = () => setShowModal9(true);\n    const handleShowModal10 = () => setShowModal10(true);\n    const handleShowModal11 = () => setShowModal11(true);\n    const handleShowModal12 = () => setShowModal12(true);\n\n\n\n    return (\n        <section className='hero'>\n\n            {/* Navbar and Sidebar */}\n            <nav style={{ justifyContent: \"space-between\" }}>\n\n                {/* <h2>Welcome</h2> */}\n                {/* <img style={{ width: 190, height: 60 }} src={reImg} alt=\"re4billion\" />\n\n                <Link to=\"/\">\n                <button type=\"button\" className=\"btn btn-primary\" style={{width:'100px'}}><i className=\"fa-solid fa-bars-progress\" style={{padding:'4px'}}></i>Status</button>\n                </Link>\n                \n\n                <button type=\"button\" className=\"btn btn-success\" onClick={toggleSidebar} style={{width:'100px'}}><i className=\"fa-solid fa-list\" style={{padding:'4px'}}></i>Devices</button>\n\n               \n\n                    <Link to=\"https://maps.re4billion.ai/\">\n                    <button type=\"button\" className=\"btn btn-info\" style={{width:'100px'}}><i className=\"fa-solid fa-location-dot\" style={{padding:'4px'}}></i>Location</button>\n                    </Link>\n\n<button type=\"button\" className=\"btn btn-danger\"onClick={handleLogout}style={{width:'100px'}}><i className=\"fa-solid fa-right-from-bracket\" style={{padding:\"4px\"}}></i>Logout</button>\n\n<button type=\"button\" className=\"btn btn-warning\" style={{width:'107px',backgroundColor:'#FFBF00'}}> \n<div id=\"txt\">\n<i className=\"fa-solid fa-clock\" style={{padding:'4px'}}></i>\n      {time}\n    </div>\n</button> */}\n\n\n\n\n\n                <div className=\"App\">\n                    {/* Sidebar */}\n                    <div className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\n                        <div className=\"sidebar-content\">\n                            <ul>\n                                <li style={{ backgroundColor: 'DodgerBlue', color: 'black', fontSize: '23px', position: 'sticky', top: '0' }}>\n                                    <i className=\"fa-solid fa-microchip\" style={{ padding: \"5px\" }}></i>\n                                    Devices\n                                </li>\n\n                                <li style={{ backgroundColor: selectedItem === 'ftb001' ? 'Orange' : '' }} onClick={() => handleMenuItemClick('ftb001')}>ftb001-Kollar</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'stb001' ? 'red' : '' }} onClick={() => handleMenuItemClick('stb001')}>stb001-Modiyur</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'nrmsv2f001' ? 'DodgerBlue' : '' }} onClick={() => handleMenuItemClick('nrmsv2f001')}>nrmsv2f001-Ananthapuram</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv3_001' ? 'Tomato' : '' }} onClick={() => handleMenuItemClick('rmsv3_001')}>rmsv3_001-Vengur</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv3_002' ? 'MediumSeaGreen' : '' }} onClick={() => handleMenuItemClick('rmsv3_002')}>rmsv3_002-Sithalingamadam</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv32_001' ? 'Gray' : '' }} onClick={() => handleMenuItemClick('rmsv32_001')}>rmsv32_001-Keelathalanur</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_001' ? 'SlateBlue' : '' }} onClick={() => handleMenuItemClick('rmsv33_001')}>rmsv33_001-Perumukkal</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_002' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv33_002')}>rmsv33_002-Agalur</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_003' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv33_003')}>rmsv33_003-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_004' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv33_004')}>rmsv33_004-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_005' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv33_005')}>rmsv33_005-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv4_001' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv4_001')}>rmsv4_001-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv4_002' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv4_002')}>rmsv4_002-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv4_003' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv4_003')}>rmsv4_003-Testing</li>\n\n                                <li style={{ backgroundColor: selectedItem === 'rmsv33_007' ? 'Violet' : '' }} onClick={() => handleMenuItemClick('rmsv33_007')}>rmsv33_007-Testing</li>\n\n                            </ul>\n                        </div>\n\n\n                    </div>\n\n\n                </div>\n            </nav>\n\n\n            {/* Card section */}\n            <div className={`content ${sidebarOpen ? 'shifted' : ''}`}>\n\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-info stickyTop\">\n                    <a className=\"navbar-brand text-white\" href=\"#\">Dashboard</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto menu3\">\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" to=\"https://re4billion.ai/\">Home<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" onClick={toggleSidebar}>Devices<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" to=\"/Alldevices\">Status<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" to=\"/\" >Location<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" to=\"/Data\" >Datasheet<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                            {/* <li className=\"nav-item active\">\n        <Link className=\"nav-link text-white\" to=\"/History\" >History<span className=\"sr-only\">(current)</span></Link>\n      </li> */}\n\n\n                            {/* <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a className=\"dropdown-item\" href=\"#\">Action</a>\n          <a className=\"dropdown-item\" href=\"#\">Another action</a>\n          <div className=\"dropdown-divider\"></div>\n          <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n        </div>\n      </li> */}\n\n                        </ul>\n\n                        <ul className=\"navbar-nav ml-auto\" style={{ paddingRight: '15px' }}>\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\">Last update on : {formattedDate}<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                        </ul>\n\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link text-white\" onClick={handleLogout}>Logout<span className=\"sr-only\">(current)</span></Link>\n                            </li>\n                        </ul>\n\n                    </div>\n                </nav>\n                <hr style={{ margin: '3px 0', borderTop: '0.5px solid rgba(0, 0, 0, 0.1)', backgroundColor: 'white' }} />\n\n\n\n                <Alart alart={alart} InverterCheck={InverterCheck} BatteryCheck={BatteryCheck} SolarCheck={SolarCheck} />\n\n\n\n                <div className=\"wrapper\">\n\n                    <div className={cardSolarVoltage}>\n                        <h2 className=\"card_title\">Solar Voltage</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-solar-panel\" style={{ padding: '10px' }}></i><strong>{solarVoltage} V</strong></h3>\n                    </div>\n\n                    <div className={cardSolarCurrent}>\n                        <h2 className=\"card_title\">Solar Current</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-solar-panel\" style={{ padding: '10px' }}></i><strong>{solarCurrent} A</strong></h3>\n                    </div>\n\n                    <div className={cardInverterVoltage}>\n                        <h2 className=\"card_title\">Inverter Voltage</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-box\" style={{ padding: '10px' }}></i><strong>{inverterVoltage} V</strong></h3>\n                    </div>\n\n                    <div className={cardInverterCurrent}>\n                        <h2 className=\"card_title\">Inverter Current</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-box\" style={{ padding: '10px' }}></i><strong>{inverterCurrent} A</strong></h3>\n                    </div>\n\n                    <div className={cardGridVoltage}>\n                        <h2 className=\"card_title\">Grid Voltage</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-bolt\" style={{ padding: '10px' }}></i><strong>{gridVoltage} V</strong></h3>\n                    </div>\n\n                    <div className={cardGridCurrent}>\n                        <h2 className=\"card_title\">Grid Current</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-bolt\" style={{ padding: '10px' }}></i><strong>{gridCurrent} A</strong></h3>\n                    </div>\n\n                    <div className={cardBatteryVoltage}>\n                        <h2 className=\"card_title\">Battery Voltage</h2>\n                        <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-battery-full\" style={{ padding: '10px' }}></i><strong>{batteryVoltage} V</strong></h3>\n                    </div>\n\n                    {(batteryCurrent !== undefined && batteryCurrent !== 0) && (\n                        <div className={cardBatteryCurrent}>\n                            <h2 className=\"card_title\">Battery Current</h2>\n                            <h3 className=\"card_value\" style={{ paddingLeft: '35px' }}><i class=\"fa-solid fa-battery-full\" style={{ padding: '10px' }}></i><strong>{batteryCurrent} A</strong></h3>\n                        </div>\n                    )}\n\n\n\n                </div>\n\n\n                <div className=\"wrapper\">\n                    <div className=\"card\" style={{ background: \"linear-gradient(45deg,#2ed8b6,#59e0c5)\", color: \"white\" }}>\n                        <h2 className=\"card_title\">Solar Generation </h2>\n                        <h3 className=\"card_value\"><strong>{(p1ValueTot / 1000).toFixed(2)} kWh</strong></h3>\n                    </div>\n\n                    <div className=\"card\" style={{ background: \"linear-gradient(45deg,#4099ff,#73b4ff)\", color: \"white\" }}>\n                        <h2 className=\"card_title\">Grid Energy </h2>\n                        <h3 className=\"card_value\"><strong>{(p2ValueTot / 1000).toFixed(2)} kWh</strong></h3>\n                    </div>\n\n                    <div className=\"card\" style={{ background: \"linear-gradient(45deg,#FF5370,#ff869a)\", color: \"white\" }}>\n                        <h2 className=\"card_title\">Load Consumption</h2>\n                        <h3 className=\"card_value\"><strong>{(p3ValueTot / 1000).toFixed(2)} kWh</strong></h3>\n                    </div>\n                </div>\n                <hr style={{ margin: '3px 0', borderTop: '0.5px solid rgba(0, 0, 0, 0.1)', backgroundColor: 'white' }} />\n\n\n                <div className=\"calenderPlace\">\n                    <input\n                        type=\"date\"\n                        defaultValue={dateOrg}\n                        onChange={e => { setCalDate(e.target.value) }}\n                        style={{ backgroundColor: dateColor }}\n                    />\n                </div>\n\n\n\n                <div className=\"chartArea\">\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal1}></i>\n                        <div className=\"chart\">\n                            <LineChart width={340} height={280} data={dataCharts}\n                                margin={{ top: 0, right: 30, left: 0, bottom: 25 }}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem' }} />\n                                <YAxis style={{ fontSize: '0.8rem' }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem' }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"SolarVoltage\" stroke=\"#1338be\" dot={false} />\n                                {/* <Line name=\"Solar Voltage\" type=\"monotone\" dataKey=\"SolarVoltageSmooth\"  stroke=\"#1338be\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal2}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 0, right: 30, left: 0, bottom: 25 }}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"SolarCurrent\" stroke=\"#03c04a\" dot={false} />\n                                {/* <Line name=\"Solar Current\" type=\"monotone\" dataKey=\"SolarCurrentSmooth\"  stroke=\"#ff0000\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal3}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 0, right: 30, left: 0, bottom: 25 }}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"SolarPower\" stroke=\"#b90e0a\" dot={false} />\n                                {/* <Line name=\"Solar Power\" type=\"monotone\" dataKey=\"SolarPowerSmooth\"  stroke=\"#b90e0a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal4}></i>\n                        <div className=\"chart\">\n                            <LineChart width={340} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"InverterVoltage\" stroke=\"#1338be\" dot={false} />\n                                {/* <Line name=\"Inverter Voltage\" type=\"monotone\" dataKey=\"InverterVoltageSmooth\"  stroke=\"#1338be\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal5}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"InverterCurrent\" stroke=\"#03c04a\" dot={false} />\n                                {/* <Line name=\"Inverter Current\" type=\"monotone\" dataKey=\"InverterCurrentSmooth\"  stroke=\"#03c04a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal6}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"InverterPower\" stroke=\"#b90e0a\" dot={false} />\n                                {/* <Line name=\"Inverter Power\" type=\"monotone\" dataKey=\"InverterPowerSmooth\"  stroke=\"#b90e0a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal7}></i>\n                        <div className=\"chart\">\n                            <LineChart width={340} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"GridVoltage\" stroke=\"#1338be\" dot={false} />\n                                {/* <Line name=\"Grid Voltage\" type=\"monotone\" dataKey=\"GridVoltageSmooth\" stroke=\"#1338be\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal8}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"GridCurrent\" stroke=\"#03c04a\" dot={false} />\n                                {/* <Line name=\"Grid Current\" type=\"monotone\" dataKey=\"GridCurrentSmooth\" stroke=\"#03c04a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal9}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"GridPower\" stroke=\"#b90e0a\" dot={false} />\n                                {/* <Line name=\"Grid Power\" type=\"monotone\" dataKey=\"GridPowerSmooth\" stroke=\"#b90e0a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal10}></i>\n                        <div className=\"chart\">\n                            <LineChart width={340} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"BatteryVoltage\" stroke=\"#1338be\" dot={false} />\n                                {/* <Line name=\"Battery Voltage\" type=\"monotone\" dataKey=\"BatteryVoltageSmooth\" stroke=\"#1338be\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal11}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"BatteryCurrent\" stroke=\"#03c04a\" dot={false} />\n                                {/* <Line name=\"Grid Current\" type=\"monotone\" dataKey=\"GridCurrentSmooth\" stroke=\"#03c04a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <i class=\"fa-solid fa-up-right-and-down-left-from-center\" style={{ float: 'right', marginTop: '-12px', paddingRight: '5px', cursor: 'pointer' }} onClick={handleShowModal12}></i>\n                        <div className=\"chart\">\n                            <LineChart width={350} height={280} data={dataCharts}\n                                margin={{ top: 35, right: 30, left: 20, bottom: 5, }} >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                <Tooltip />\n                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                <Line type=\"monotone\" dataKey=\"BatteryPower\" stroke=\"#b90e0a\" dot={false} />\n                                {/* <Line name=\"Grid Power\" type=\"monotone\" dataKey=\"GridPowerSmooth\" stroke=\"#b90e0a\"  dot={false} /> */}\n                            </LineChart>\n                        </div>\n                    </div>\n\n\n                    {/* //////////////////////////////////Modal Start///////////////////////////////////////// */}\n\n                    <Modal show={showModal1} onHide={handleCloseModal1} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Solar Voltage</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal1}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem' }} />\n                                                <YAxis style={{ fontSize: '0.8rem' }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem' }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"SolarVoltage\" stroke=\"#1338be\" dot={false} />\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal2} onHide={handleCloseModal2} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Solar Current</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal2}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"SolarCurrent\" stroke=\"#03c04a\" dot={false} />\n                                                {/* <Line name=\"Solar Current\" type=\"monotone\" dataKey=\"SolarCurrentSmooth\"  stroke=\"#ff0000\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal3} onHide={handleCloseModal3} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Solar Power</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal3}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"SolarPower\" stroke=\"#b90e0a\" dot={false} />\n                                                {/* <Line name=\"Solar Power\" type=\"monotone\" dataKey=\"SolarPowerSmooth\"  stroke=\"#b90e0a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal4} onHide={handleCloseModal4} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Inverter Voltage</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal4}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"InverterVoltage\" stroke=\"#1338be\" dot={false} />\n                                                {/* <Line name=\"Inverter Voltage\" type=\"monotone\" dataKey=\"InverterVoltageSmooth\"  stroke=\"#1338be\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal5} onHide={handleCloseModal5} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Inverter Current</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal5}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"InverterCurrent\" stroke=\"#03c04a\" dot={false} />\n                                                {/* <Line name=\"Inverter Current\" type=\"monotone\" dataKey=\"InverterCurrentSmooth\"  stroke=\"#03c04a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal6} onHide={handleCloseModal6} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Inverter Power</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal6}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"InverterPower\" stroke=\"#b90e0a\" dot={false} />\n                                                {/* <Line name=\"Inverter Power\" type=\"monotone\" dataKey=\"InverterPowerSmooth\"  stroke=\"#b90e0a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal7} onHide={handleCloseModal7} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Grid Voltage</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal7}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"GridVoltage\" stroke=\"#1338be\" dot={false} />\n                                                {/* <Line name=\"Grid Voltage\" type=\"monotone\" dataKey=\"GridVoltageSmooth\" stroke=\"#1338be\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal8} onHide={handleCloseModal8} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Grid Current</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal8}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"GridCurrent\" stroke=\"#03c04a\" dot={false} />\n                                                {/* <Line name=\"Grid Current\" type=\"monotone\" dataKey=\"GridCurrentSmooth\" stroke=\"#03c04a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal9} onHide={handleCloseModal9} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Grid Power</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal9}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"GridPower\" stroke=\"#b90e0a\" dot={false} />\n                                                {/* <Line name=\"Grid Power\" type=\"monotone\" dataKey=\"GridPowerSmooth\" stroke=\"#b90e0a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal10} onHide={handleCloseModal10} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Battery Voltage</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal10}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Volts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"BatteryVoltage\" stroke=\"#1338be\" dot={false} />\n                                                {/* <Line name=\"Battery Voltage\" type=\"monotone\" dataKey=\"BatteryVoltageSmooth\" stroke=\"#1338be\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal11} onHide={handleCloseModal11} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>Battery Current</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal11}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Amps)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"BatteryCurrent\" stroke=\"#03c04a\" dot={false} />\n                                                {/* <Line name=\"Grid Current\" type=\"monotone\" dataKey=\"GridCurrentSmooth\" stroke=\"#03c04a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    <Modal show={showModal12} onHide={handleCloseModal12} centered dialogClassName=\"custom-modal-dialog\">\n                        <Modal.Header>\n                            <Modal.Title>BatteryPower</Modal.Title>\n                            <i class=\"fa-solid fa-xmark\" style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={handleCloseModal12}></i>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {/* Increase the width by changing col-12 to a larger value */}\n                                        <div className=\"chart\">\n                                            <LineChart width={800} height={450} data={dataCharts}\n                                                margin={{ top: 0, right: 30, left: 20, bottom: 5 }}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"ccAxisXValue\" angle={-15} textAnchor=\"end\" style={{ fontSize: '0.8rem', }} />\n                                                <YAxis style={{ fontSize: '0.8rem', }} label={{ dx: -10, value: '(Watts)', angle: -90, fontSize: '0.9rem', }} />\n                                                <Tooltip />\n                                                <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\n                                                <Line type=\"monotone\" dataKey=\"BatteryPower\" stroke=\"#b90e0a\" dot={false} />\n                                                {/* <Line name=\"Grid Power\" type=\"monotone\" dataKey=\"GridPowerSmooth\" stroke=\"#b90e0a\"  dot={false} /> */}\n                                            </LineChart>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n\n                    {/* /////////////////////////////////Modal End //////////////////////////////////////////*/}\n\n\n                </div>\n            </div>\n\n        </section>\n    );\n};\n\nexport default Hero;","import React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className='lod'>\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  )\r\n}\r\n","import app from \"./firebase\"\nimport { db } from './firebase';\nimport { ref, onValue, get, query, orderByKey, startAt, endAt } from 'firebase/database';\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\nimport moment from \"moment\";\nimport { isNaN } from \"lodash\";\nimport './Sidebar.css';\nimport reImg from './re4billion.png'\nimport Alart from './components/Alart';\nimport \"./Alldevices.css\"\nimport logoImg from './re4billion.png'\nimport { Link } from 'react-router-dom'\n\nlet prevTime = 24;\nlet prevTimeOld = 24;\nlet timeCount = 0;\nlet p1Value = 0;\nlet p2Value = 0;\nlet p3Value = 0;\nlet p1ValueTot = 0;\nlet p2ValueTot = 0;\nlet p3ValueTot = 0;\nlet flag = 0;\nlet p1ValueTotFinal = 0;\nlet p2ValueTotFinal = 0;\nlet p3ValueTotFinal = 0;\nlet axisValueCount = 0;\nlet v1 = 0;\nlet v2 = 0;\nlet v3 = 0;\nlet v4 = 0;\nlet v5 = 0;\nlet v6 = 0;\nlet v7 = 0;\nlet v8 = 0;\nlet v9 = 0;\nlet v10 = 0;\nconst myArray1 = []\nconst myArray2 = []\nconst myArray3 = []\nconst myArray4 = []\nconst myArray5 = []\nconst myArray6 = []\nconst myArray7 = []\nconst myArray8 = []\nconst myArray9 = []\nconst myArray10 = []\nlet iterVal = 0;\n\n\n\n\nconst Alldevices = ({ handleLogout}) => {\n    const [data, setdata] = useState([])\n    // const [timeValueArray, setTimeValueArray] = useState([])\n    // const [solarVoltageArray, setSolarVoltageArray] = useState([])\n    // const [solarVoltage, setSolarVoltage] = useState('')\n    // const [solarCurrent, setSolarCurrent] = useState('')\n    // const [inverterVoltage, setInverterVoltage] = useState('')\n    // const [inverterCurrent, setInverterCurrent] = useState('')\n    // const [gridVoltage, setGridVoltage] = useState('')\n    // const [gridCurrent, setGridCurrent] = useState('')\n    // const [batteryVoltage, setBatteryVoltage] = useState('')\n\n\n\n    var curr = new Date(new Date());\n    curr.setDate(curr.getDate());\n    var dateOrg = curr.toISOString().substring(0, 10);\n    var dd1 = dateOrg.split('-');\n\n    const [caldate, setCalDate] = useState(dateOrg);\n    const [dateColor, setDateColor] = useState('green');\n    \n    // console.log(caldate)\n\n    \n    // Sidebar\n    // const [sidebarOpen, setSidebarOpen] = useState(false);\n    // const [selectedItem, setSelectedItem] = useState('ftb001');\n\n    // const toggleSidebar = () => {\n    //     setSidebarOpen(!sidebarOpen);\n    // };\n\n    // const handleMenuItemClick = (itemName) => {\n    //     setSelectedItem(itemName);\n    //     // You can perform any other actions here based on the selected item\n    // };\n\n    //Sidebar end\n\n\n      //Alarts\n//   const[alart,setAlart]=useState(null)\n//   const showAlart=(message,type)=>{\n//     setAlart({\n//       msg:message,\n//       type:type\n//     })\n//    // setTimeout(() => {\n//     //   setAlart(null);\n//     // },3000);\n//   }\n\n//   const [InverterCheck, setInverterCheck] = useState(null);\n//   const [BatteryCheck, setBatteryCheck] = useState(null);\n//   const [SolarCheck, setSolarCheck] = useState(null);\n\n//   const InverterAlart = (message) => {\n//       setInverterCheck({\n//           msg: message\n//       })\n//   }\n\n//   const BatteryAlart = (message) => {\n//       setBatteryCheck({\n//           msg: message\n//       })\n//   }\n\n//   const SolarAlart = (message) => {\n//       setSolarCheck({\n//           msg: message\n//       })\n//   }\n\n//   useEffect(() => {\n//       InverterAlart(\"hello i am inverter\");\n//       BatteryAlart(\"Hello i am battery\");\n//       SolarAlart(\"hello i am solar\");\n//   }, []);\n\n\n\nuseEffect(() => {\n    fetchdatafull(); // Fetch full data\n    // Consider removing this if it's not necessary to be called on every caldate change\n    datafull(); // Process full data, make sure it's necessary to be called here\n    return () => {};\n}, [caldate]);\n\n\n  \n\n  \n\n// Function to fetch data for all emails\nconst mail = [\"ftb001- Kollar\", \"stb001- Modiyur\", \"nrmsv2f001- Ananthapuram\", \"rmsv3_001- Vengur\", \"rmsv3_002- Sithalingamadam\", \"rmsv32_001- Keelathalanur\", \"rmsv33_001- Perumukkal\", \"rmsv33_002- Agalur\"];\n\nconst fetchdatafull = async() => {\n\n    try {\n        await datafull(); // Call the datafull function and await its completion\n        // The rest of your code that depends on the data from datafull function goes here\n        // For example, if you need to perform further operations after datafull completes, place them here\n    } catch (error) {\n        console.error(\"Error fetching full data:\", error);\n        // Handle error if needed\n    }\n\n\n    let currentTimestamp = Math.floor(Date.now() / 1000);\n\n    if (caldate) {\n        currentTimestamp = Math.floor(new Date(caldate).getTime() / 1000);\n    }\n\n    const timestamp24HoursAgo = currentTimestamp - (24 * 60 * 60);\n\n    mail.forEach((email, index) => {\n        const emailPrefix = email.split('-')[0].trim();\n\n        const databaseRefFull = ref(db, `data/${emailPrefix}/timestamp`);\n        const queryRefFull = query(databaseRefFull, orderByKey(), startAt(\"\" + timestamp24HoursAgo));\n\n        get(queryRefFull)\n            .then((snapshot) => {\n                const recordFull = [];\n                let k = 0;\n                snapshot.forEach((childSnapshot) => {\n                    if (emailPrefix === \"ftb001\" && childSnapshot.key > 1663660000) {\n                        k = 5400;\n                    }\n                    const uniValue = parseInt((new Date(caldate).getTime() / 1000).toFixed(0)) - 19800;\n                    if (childSnapshot.key > uniValue - k && childSnapshot.key < uniValue + 86400 - k) {\n                        recordFull.push(childSnapshot);\n                    }\n                });\n\n                const divFull = document.createElement('div');\n                divFull.classList.add('email-data');\n\n                const header = document.createElement('h3');\n                header.innerHTML = `<i class=\"fa-solid fa-microchip\" style=\"padding:7px; font-size: 22px\"></i> \n                <span style=\"font-size: 24px;\">${email}</span>`;\n                \n                // Add Solar Generation span only if the device is working\n                if (recordFull.length > 0) {\n                    const solarGenerationSpan = document.createElement('span');\n                    solarGenerationSpan.innerHTML = `Solar Generation: ${p1ValueTotArray[index]} kWh`;\n                    solarGenerationSpan.style.border = '1px solid black';\n                    solarGenerationSpan.style.padding = '2px';\n                    solarGenerationSpan.style.margin = '10px';\n                    solarGenerationSpan.style.display = 'inline-block';\n                    solarGenerationSpan.style.backgroundColor = '#8cf35d';\n                    solarGenerationSpan.style.borderRadius = '5px';\n                    solarGenerationSpan.style.fontSize = '15px';\n                    header.appendChild(solarGenerationSpan);\n                }\n\n                header.style.marginRight = '10px';\n                header.style.cursor = 'pointer';\n                header.addEventListener('click', () => {\n                    toggleAdditionalData(divFull);\n                });\n                divFull.appendChild(header);\n\n                const additionalDataDiv = document.createElement('div');\n                additionalDataDiv.classList.add('additional-data');\n                additionalDataDiv.style.display = 'none';\n                let additionalDataHTML = '';\n                if (recordFull.length > 0) {\n                    additionalDataHTML += '<p>';\n                    get(ref(db, `data/${emailPrefix}/latestValues`))\n                        .then((snapshot) => {\n                            const record = snapshot.val();\n                            if (record && record.solarVoltage!== undefined  && record.solarCurrent !== undefined && record.inverterVoltage !== undefined && record.inverterCurrent !== undefined &&  record.gridVoltage !== undefined &&  record.gridCurrent !== undefined  && record.batteryVoltage !== undefined) {\n\n                                if (record.solarVoltage.toFixed(2) > 0) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Solar Voltage: ${record.solarVoltage.toFixed(2)} V</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Solar Voltage is down: ${record.solarVoltage.toFixed(2)} V</span>`;\n                                }\n\n                                if (record.inverterVoltage.toFixed(2) > 0) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Inverter Voltage: ${record.inverterVoltage.toFixed(2)} V</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Inverter Voltage is down: ${record.inverterVoltage.toFixed(2)} V</span>`;\n                                }\n                                \n                                if (record.gridVoltage.toFixed(2) > 0) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Grid Voltage: ${record.gridVoltage.toFixed(2)} V</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Grid Voltage is down: ${record.gridVoltage.toFixed(2)} V</span>`;\n                                }\n\n\n                                if (record.batteryVoltage.toFixed(2) > 22) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Battery Voltage: ${record.batteryVoltage.toFixed(2)} V</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Battery Voltage is down: ${record.batteryVoltage.toFixed(2)} V</span>`;\n                                }\n\n                                if ((record.solarVoltage * record.solarCurrent).toFixed(2) > 2) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Solar power: ${(record.solarVoltage * record.solarCurrent).toFixed(2)} W</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Solar power is down: ${(record.solarVoltage * record.solarCurrent).toFixed(2)} W</span>`;\n                                }\n\n\n                                if ((record.inverterVoltage * record.inverterCurrent).toFixed(2) > 2) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Inverter power: ${(record.inverterVoltage * record.inverterCurrent).toFixed(2)} W</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px; color:#FFFFFF;\">Inverter power is down: ${(record.inverterVoltage * record.inverterCurrent).toFixed(2)} W</span>`;\n                                }\n\n                                if ((record.gridVoltage * record.gridCurrent ).toFixed(2) > 2) {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block;background-color:#8cf35d; border-radius: 5px; font-size: 15px;\">Grid power: ${(record.gridVoltage * record.gridCurrent).toFixed(2)} W</span>`;\n                                } else {\n                                    additionalDataHTML += `<span style=\"border: 1px solid black; padding: 1px; margin: 5px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px;color:#FFFFFF;\">Grid power is down: ${(record.gridVoltage * record.gridCurrent).toFixed(2)} W</span>`;\n                                }\n\n\n                            } else {\n                                // If any of the values are undefined, handle it accordingly\n                                additionalDataHTML += `<span style=\"border: 1px solid black; padding: 2px; margin: 10px; display: inline-block; background-color:#fc7266; border-radius: 5px; font-size: 15px;color:#FFFFFF;\">Data not available</span>`;\n                            }\n                            additionalDataHTML += '</p>';\n                            additionalDataDiv.innerHTML = additionalDataHTML;\n                            divFull.appendChild(additionalDataDiv);\n                        })\n                        .catch((error) => {\n                            console.error(`Error fetching data for ${emailPrefix}:`, error);\n                        });\n                } else {\n                    // If no records found, display a message\n                    additionalDataHTML = `<p><span style=\"border: 1px solid black; padding: 5px; margin: 10px; display: inline-block; background-color:#fc7266; border-radius: 5px\">No data available</span></p>`;\n                    additionalDataDiv.innerHTML = additionalDataHTML;\n                    divFull.appendChild(additionalDataDiv);\n                }\n\n                if (recordFull.length > 0) {\n                    divFull.className = 'border border-success';\n                    document.getElementById('Working').appendChild(divFull);\n                } else {\n                    divFull.className = 'border border-danger';\n                    document.getElementById('notWorking').appendChild(divFull);\n                }\n            })\n            .catch((error) => {\n                console.error(`Error fetching data for ${emailPrefix}:`, error);\n            });\n    });\n};\n\n\n\n\n\n\n\n\n// Function to toggle additional data display\nlet currentOpenEmail = null;\n\nfunction toggleAdditionalData(element) {\n    const additionalDataDiv = element.querySelector('.additional-data');\n    \n    if (!additionalDataDiv) {\n        // If additionalDataDiv is null, it means there are no records for this email\n        return;\n    }\n\n\n\n\n\n    \n    const hasRecords = additionalDataDiv.innerHTML.trim() !== ''; // Check if there are records\n    \n    // If another email's additional data is currently displayed, hide it\n    if (currentOpenEmail && currentOpenEmail !== element && hasRecords) {\n        const currentOpenAdditionalDataDiv = currentOpenEmail.querySelector('.additional-data');\n        currentOpenAdditionalDataDiv.style.display = 'none';\n    }\n    \n    // Toggle display of additional data for the current email\n    if (hasRecords) {\n        additionalDataDiv.style.display = (additionalDataDiv.style.display === 'none') ? 'block' : 'none';\n        currentOpenEmail = (additionalDataDiv.style.display === 'block') ? element : null;\n    }\n}\n\n\n\nlet p1ValueTotArray = []; // Define p1ValueTotArray outside the function to make it accessible globally\n\nconst datafull = async () => {\n    try {\n        let currentTimestamp = Math.floor(Date.now() / 1000);\n        const timestamp24HoursAgo = currentTimestamp - (24 * 60 * 60);\n        const uniValue = parseInt((new Date(caldate).getTime() / 1000).toFixed(0)) - 19800;\n\n        p1ValueTotArray = []; // Reset p1ValueTotArray before populating it\n\n        const promises = mail.map(async (mailItem) => {\n            const mailSplit = mailItem.split(\"-\")[0].trim(); // Extracting mail without space and hyphen\n            const databaseRef = ref(db, `data/${mailSplit}/timestamp`);\n            const queryRef = query(databaseRef, orderByKey(), startAt(\"\" + timestamp24HoursAgo));\n\n            const snapshot = await get(queryRef);\n            const record = [];\n            let k = 0;\n            snapshot.forEach((childSnapshot) => {\n                if (mailSplit == \"ftb001\" && childSnapshot.key > 1663660000) {\n                    k = 5400;\n                }\n                if (childSnapshot.key > uniValue - k && childSnapshot.key < uniValue + 86400 - k) {\n                    record.push(childSnapshot);\n                }\n            });\n\n            setdata(record);\n\n            if (record.length) {\n                setDateColor('#8cf35d');\n            } else {\n                setDateColor('#fc7266');\n            }\n\n            return (p1ValueTot / 1000).toFixed(2);\n        });\n\n        const results = await Promise.all(promises);\n\n        // Flatten the array of arrays into a single array\n        const flattenedArray = results.flat();\n\n        console.log(\"Flattened Array:\", flattenedArray);\n\n        p1ValueTotArray = flattenedArray;\n\n        return flattenedArray;\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return null; // Return null in case of error\n    }\n}\n\n\n// Call datafull function\n// datafull().then(result => console.log(\"Result:\", result));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n\n    p1ValueTot = 0;\n    p2ValueTot = 0;\n    p3ValueTot = 0;\n\n\n\n\n    const dataCharts = Object.entries(data)\n        .map(([key, value]) => {\n            let date;\n            // var mail = `${selectedItem}`\n\n            if (value.key > 1663660000 && mail == \"ftb001\") {\n\n                const t = new Date((Number(value.key) + (5400 - 230)) * 1000)\n                date = new Intl.DateTimeFormat('en-US', { hour: '2-digit', hour12: false }).format(t);\n\n                if (prevTime == Number(date)) {\n                    flag = 1;\n                    if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                        timeCount = timeCount + 1;\n\n                        p1Value = p1Value + (value.val().solarVoltage) * (value.val().solarCurrent)\n                        p2Value = p2Value + (value.val().gridVoltage) * (value.val().gridCurrent)\n                        p3Value = p3Value + (value.val().inverterVoltage) * (value.val().inverterCurrent)\n                    }\n                    // console.log(\"prevTime\")\n                    // console.log(prevTime)            \n\n                } else {\n\n                    if (flag == 1) {\n\n                        p1ValueTot = p1ValueTot + p1Value / timeCount;\n                        p2ValueTot = p2ValueTot + p2Value / timeCount;\n                        p3ValueTot = p3ValueTot + p3Value / timeCount;\n\n                        if (isNaN(p1ValueTot)) {\n                            p1ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p2ValueTot)) {\n                            p2ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p3ValueTot)) {\n                            p3ValueTot = 0;\n\n                        }\n\n                        // console.log(\"p3ValueTot\")\n                        // console.log(p3ValueTot)\n\n                        if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                            timeCount = 1;\n                            p1Value = (value.val().solarVoltage) * (value.val().solarCurrent);\n                            p2Value = (value.val().gridVoltage) * (value.val().gridCurrent);\n                            p3Value = (value.val().inverterVoltage) * (value.val().inverterCurrent);\n                        }\n                        if (prevTime == 24) {\n                            prevTime = 1;\n                        } else {\n                            prevTime = prevTime + 1;\n                        }\n                    }\n                }\n\n            } else {\n                const t = new Date(value.key * 1000)\n                date = new Intl.DateTimeFormat('en-US', { hour: '2-digit', hour12: false }).format(t);\n\n\n                if (prevTime == Number(date)) {\n                    flag = 1;\n                    if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                        timeCount = timeCount + 1;\n\n                        p1Value = p1Value + (value.val().solarVoltage) * (value.val().solarCurrent)\n                        p2Value = p2Value + (value.val().gridVoltage) * (value.val().gridCurrent)\n                        p3Value = p3Value + (value.val().inverterVoltage) * (value.val().inverterCurrent)\n                    }\n                    // console.log(\"prevTime\")\n                    // console.log(prevTime)            \n\n                } else {\n\n                    if (flag == 1) {\n\n                        p1ValueTot = p1ValueTot + p1Value / timeCount;\n                        p2ValueTot = p2ValueTot + p2Value / timeCount;\n                        p3ValueTot = p3ValueTot + p3Value / timeCount;\n\n                        if (isNaN(p1ValueTot)) {\n                            p1ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p2ValueTot)) {\n                            p2ValueTot = 0;\n\n                        }\n\n                        if (isNaN(p3ValueTot)) {\n                            p3ValueTot = 0;\n\n                        }\n\n                        // console.log(\"p3ValueTot\")\n                        // console.log(p3ValueTot)\n\n                        if (!(isNaN((value.val().solarVoltage) * (value.val().solarCurrent))) && !(isNaN((value.val().gridVoltage) * (value.val().gridCurrent))) && !(isNaN((value.val().inverterVoltage) * (value.val().inverterCurrent)))) {\n                            timeCount = 1;\n                            p1Value = (value.val().solarVoltage) * (value.val().solarCurrent);\n                            p2Value = (value.val().gridVoltage) * (value.val().gridCurrent);\n                            p3Value = (value.val().inverterVoltage) * (value.val().inverterCurrent);\n                        }\n                        if (prevTime == 24) {\n                            prevTime = 1;\n                        } else {\n                            prevTime = prevTime + 1;\n                        }\n                    }\n                }\n            }\n\n\n            axisValueCount = axisValueCount + 1;\n\n            if (axisValueCount < 10) {\n                v1 = Math.abs(value.val().solarVoltage)\n                myArray1.push(v1)\n\n                v2 = Math.abs(value.val().solarCurrent)\n                myArray2.push(v2)\n\n                v3 = Math.abs((value.val().solarVoltage) * (value.val().solarCurrent))\n                myArray3.push(v3)\n\n                v4 = Math.abs(value.val().inverterVoltage)\n                myArray4.push(v4)\n\n                v5 = Math.abs(value.val().inverterCurrent)\n                myArray5.push(v5)\n\n                v6 = Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent))\n                myArray6.push(v6)\n\n                v7 = Math.abs(value.val().gridVoltage)\n                myArray7.push(v7)\n\n                v8 = Math.abs(value.val().gridCurrent)\n                myArray8.push(v8)\n\n                v9 = Math.abs((value.val().gridVoltage) * (value.val().gridCurrent))\n                myArray9.push(v9)\n\n                v10 = Math.abs(value.val().batteryVoltage)\n                myArray10.push(v10)\n\n            } else {\n                myArray1.push(Math.abs(value.val().solarVoltage))\n                myArray2.push(Math.abs(value.val().solarCurrent))\n                myArray3.push(Math.abs((value.val().solarVoltage) * (value.val().solarCurrent)))\n                myArray4.push(Math.abs(value.val().inverterVoltage))\n                myArray5.push(Math.abs(value.val().inverterCurrent))\n                myArray6.push(Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent)))\n                myArray7.push(Math.abs(value.val().gridVoltage))\n                myArray8.push(Math.abs(value.val().gridCurrent))\n                myArray9.push(Math.abs((value.val().gridVoltage) * (value.val().gridCurrent)))\n                myArray10.push(Math.abs(value.val().batteryVoltage))\n\n                let sum1 = 0;\n                let sum2 = 0;\n                let sum3 = 0;\n                let sum4 = 0;\n                let sum5 = 0;\n                let sum6 = 0;\n                let sum7 = 0;\n                let sum8 = 0;\n                let sum9 = 0;\n                let sum10 = 0;\n\n                for (var i = iterVal; i < iterVal + 10; i++) {\n                    sum1 = sum1 + myArray1[i]\n                    sum2 = sum2 + myArray2[i]\n                    sum3 = sum3 + myArray3[i]\n                    sum4 = sum4 + myArray4[i]\n                    sum5 = sum5 + myArray5[i]\n                    sum6 = sum6 + myArray6[i]\n                    sum7 = sum7 + myArray7[i]\n                    sum8 = sum8 + myArray8[i]\n                    sum9 = sum9 + myArray9[i]\n                    sum10 = sum10 + myArray10[i]\n                }\n                // console.log(\"sum2\")\n                // console.log(sum2)\n                iterVal = iterVal + 1;\n                v1 = sum1 / 10\n                v2 = sum2 / 10\n                v3 = sum3 / 10\n                v4 = sum4 / 10\n                v5 = sum5 / 10\n                v6 = sum6 / 10\n                v7 = sum7 / 10\n                v8 = sum8 / 10\n                v9 = sum9 / 10\n                v10 = sum10 / 10\n            }\n            return {\n                ccAxisXValue: date,\n                SolarVoltage: Math.abs(value.val().solarVoltage),\n                SolarCurrent: Math.abs(value.val().solarCurrent),\n                SolarPower: Math.abs((value.val().solarVoltage) * (value.val().solarCurrent)),\n                InverterVoltage: Math.abs(value.val().inverterVoltage),\n                InverterCurrent: Math.abs(value.val().inverterCurrent),\n                InverterPower: Math.abs((value.val().inverterVoltage) * (value.val().inverterCurrent)),\n                GridVoltage: Math.abs(value.val().gridVoltage),\n                GridCurrent: Math.abs(value.val().gridCurrent),\n                GridPower: Math.abs((value.val().gridVoltage) * (value.val().gridCurrent)),\n                BatteryVoltage: Math.abs(value.val().batteryVoltage),\n\n                SolarVoltageSmooth: v1,\n                SolarCurrentSmooth: v2,\n                SolarPowerSmooth: v3,\n                InverterVoltageSmooth: v4,\n                InverterCurrentSmooth: v5,\n                InverterPowerSmooth: v6,\n                GridVoltageSmooth: v7,\n                GridCurrentSmooth: v8,\n                GridPowerSmooth: v9,\n                BatteryVoltageSmooth: v10,\n\n            }\n\n        })\n\n        //Alerts\n\n        // useEffect(() => {\n        //     // Define a function to check conditions and show alerts\n        //     const checkAndShowAlerts = () => {\n        //       // Check conditions after data is fetched\n        //       if ((p1ValueTot / 1000) > 0 && (p3ValueTot / 1000) > 0) {\n        //         showAlart(\"This device is working\", \"success\");\n        //       } else {\n        //         showAlart(\"This device is not working\", \"danger\");\n        //       }\n        //     };\n          \n        //     // Delay execution after 3000 milliseconds (3 seconds)\n        //     const delay = 320; // time in milliseconds\n        //     const timerId = setTimeout(checkAndShowAlerts, delay);\n          \n        //     // Clean up the timer to avoid memory leaks\n        //     return () => clearTimeout(timerId);\n            \n        //   }, [p1ValueTot, p2ValueTot, p3ValueTot,showAlart]);\n\n\n  \n\n    return (\n       \n  <div className=\"big\">\n\n<nav className=\"navbar navbar-expand-lg navbar-light bg-info stickyTop\">\n  <a className=\"navbar-brand text-white\" href=\"#\">RE4BILLION.AI</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto menu3\">\n    <li className=\"nav-item active\">\n        <Link className=\"nav-link text-white\" to=\"https://re4billion.ai/\">Home<span className=\"sr-only\">(current)</span></Link>\n      </li>\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link text-white\" to=\"/\" >Location<span className=\"sr-only\">(current)</span></Link>\n      </li>\n    </ul>\n   \n    <ul className=\"navbar-nav ml-auto menu3\"> \n      <li className=\"nav-item active\">\n        <Link className=\"nav-link text-white\" to=\"/db\" >Go to Dashboard<span className=\"sr-only\">(current)</span></Link>\n      </li>\n    </ul>\n    \n  </div>\n</nav>\n<hr style={{ margin: '3px 0', borderTop: '0.5px solid rgba(0, 0, 0, 0.1)', backgroundColor: 'white' }} />\n\n\n<div id=\"email-containers\">\n                <div className=\"flex-container\">\n            \n\n            <div className=\"flex-child magenta\" id=\"Working\" style={{padding:'8px'}}>\n                <h1><i class=\"fa-solid fa-circle-check\" style={{color: 'green',padding:'7px'}}></i>Device are working</h1>\n               \n            </div>\n            \n            <div className=\"flex-child green\" id=\"notWorking\" style={{padding:'8px'}}>\n            <h1><i class=\"fa-solid fa-circle-xmark\" style={{color:'red',padding:'7px'}}></i>Device are not working</h1>\n            \n            </div>\n            \n          </div>\n          <div id=\"data-container\"></div>\n</div>\n  </div>\n\n\n    );\n};\n\nexport default Alldevices;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Location({ handleLogout }) {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-info stickyTop\">\r\n        <a className=\"navbar-brand text-white\" href=\"#\">RE4BILLION.AI</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto menu3\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link text-white\" to=\"https://re4billion.ai/\">Home<span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link text-white\" to=\"/Alldevices\">Dashboard<span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n\r\n          </ul>\r\n\r\n          <ul className=\"navbar-nav ml-auto menu3\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link text-white\" onClick={handleLogout}>Logout<span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* <ul className=\"navbar-nav ml-auto menu3\"> \r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link text-white\" to=\"/db\" >Go to Dashboard<span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n          </ul> */}\r\n        </div>\r\n      </nav>\r\n\r\n      <hr style={{ margin: '3px 0', borderTop: '0.5px solid rgba(0, 0, 0, 0.1)', backgroundColor: 'white' }} />\r\n\r\n      {/* Map content */}\r\n      <div className='map' style={{ marginTop: '54px' }}>\r\n        <iframe src=\"https://maps.re4billion.ai/\" title=\"RE4BILLION Map\" style={{ width: '100%', height: '600px', border: 'none' }}></iframe>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState,useEffect} from \"react\";\nimport Login from './Login';\nimport Hero from './Hero';\nimport './App.css';\nimport {getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword} from \"firebase/auth\"\nimport app from \"./firebase\" \nimport {db} from './firebase';\nimport {ref,onValue} from 'firebase/database';\nimport Loading from \"./components/Loading\";\n\n\n// Import your audio file\nimport loginSound from './loginSound.mp3';\nimport Alldevices from \"./Alldevices\";\nimport History from \"./History\";\nimport Data from \"./Data\";\nimport Location from \"./Location\";\n\n// import Maps from \"./Maps\"\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n\nfunction App()  {\n  const [user,setUser] = useState('');\n  const [email,setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError,setPasswordError] = useState('');\n  const [hasAccount,setHasAccount]  = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  \n\n\n  const auth=getAuth(app);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');  \n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () => {\n    localStorage.setItem(\"email\",email);\n    clearErrors();\n    signInWithEmailAndPassword(auth,email,password)\n\n    .then(() => {\n      // Play audio clip after successful login\n      const audio = new Audio(loginSound);\n      audio.play();\n    })\n    \n      .catch(err => {\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n           setEmailError(err.message);\n           break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;  \n        }\n      });\n\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false); // Stop loading after some time (replace with actual login logic)\n      }, 2000);\n\n\n  };\n\n\n  const handleSignup = () => {\n    clearErrors();\n    createUserWithEmailAndPassword(auth,email,password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n           setEmailError(err.message);\n           break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    auth.signOut();\n  };\n\n  const authListener = () => {\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n\n\n\n  useEffect(() => {\n    authListener();\n    setLoading(true); // Show spinner if user is already logged in\n      setTimeout(() => {\n        setLoading(false); // Hide spinner after some time\n      }, 2000);\n  },[]);\n\n  return (\n    <>\n    <Router>\n        <div className='App'>\n      {/* <Alart alart={alart}/> */}\n      {loading ? (\n        // Render the Loading component if loading is true\n        <Loading />\n      ) : user ? (\n        <Routes>\n        <Route exact path=\"/\" element={ <Location handleLogout={handleLogout}/> }></Route>\n        <Route exact path=\"/Alldevices\" element={ <Alldevices/> }></Route>\n        <Route exact path=\"/db\" element={<Hero handleLogout={handleLogout}  /> }></Route>\n        <Route exact path=\"/History\" element={ <History/> }></Route>\n        <Route exact path=\"/Data\" element={ <Data/> }></Route>\n\n        </Routes>\n        //  showAlart={showAlart}\n       \n      ) : (\n        <Login \n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n    </Router>\n    </>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n\n    <App/>,\n  \n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/re4billion.7c9f36f6.png\";"],"sourceRoot":""}